apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mainlb
  namespace: three-tier
  # This section contains annotations for configuring an AWS Application Load Balancer (ALB) with Kubernetes Ingress.
  # - alb.ingress.kubernetes.io/scheme: Specifies the scheme of the ALB. "internet-facing" means the ALB is publicly accessible.
  # - alb.ingress.kubernetes.io/target-type: Defines the type of target for the ALB.
  #
  # - alb.ingress.kubernetes.io/target-type: Defines the type of target for the ALB. "ip" indicates that the ALB targets IP addresses.
  #   In AWS Application Load Balancer (ALB) configurations, there are two primary target types:
  #   1. Instance: Routes traffic to the instance IDs of the EC2 instances.
  #   2. IP: Routes traffic to the IP addresses of the targets.
  #   Why Use `ip` for EKS?
  #   - Pod IPs: Each Kubernetes pod gets its own IP address. Using `ip` allows the ALB to route traffic directly to pod IPs.
  #   - Flexibility: Supports dynamic scaling as pods can be frequently created and destroyed, with changing IP addresses.
  #   - Compatibility: Ensures compatibility with the Kubernetes networking model, where services are exposed via pod IPs.
  #
  #
  # - alb.ingress.kubernetes.io/listen-ports: Configures the ports that the ALB listens on. In this case, it listens on port 80 for HTTP traffic.
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    # alb.ingress.kubernetes.io/subnets: "subnet-0aa439b4ddafcca10,subnet-0b95df318219145ca,subnet-0ccca36474902829a"
spec:
  ingressClassName: alb
  rules:
    - host: muralirajendran.click
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: api
                port:
                  number: 3500
          - path: /healthz
            pathType: Exact
            backend:
              service:
                name: api
                port:
                  number: 3500
          - path: /ready
            pathType: Exact
            backend:
              service:
                name: api
                port:
                  number: 3500
          - path: /started
            pathType: Exact
            backend:
              service:
                name: api
                port:
                  number: 3500
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 3000
